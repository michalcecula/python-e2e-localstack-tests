{"uid":"1b8f8c915fcb30ba","name":"test_autocomplete","fullName":"tests.test_edit#test_autocomplete","historyId":"116b21cd5116ce076d64042c4703a3e3","time":{"start":1718382937120,"stop":1718382937120,"duration":0},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup","statusTrace":"chrome_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"da515ff95c7890d619ff16ffea58a23e\")>\n\n    @pytest.fixture\n    def logged_in_test(chrome_browser: webdriver):\n>       user = setup_test_user()\n\ntests/conftest.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:45: in setup_test_user\n    register_response = SignUp().api_call(user)\napi/post_sign_up.py:7: in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\napi/base_api.py:33: in make_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","flaky":false,"newFailed":false,"newBroken":true,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1718382934644,"stop":1718382934661,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"chrome_browser","time":{"start":1718382937121,"stop":1718382944196,"duration":7075},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"logged_in_test","time":{"start":1718382944196,"stop":1718382944206,"duration":10},"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 167, in _multicall\n    teardown.throw(outcome._exception)\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 1132, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/_pytest/fixtures.py\", line 906, in call_fixture_func\n    fixture_result = next(generator)\n                     ^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/tests/conftest.py\", line 35, in logged_in_test\n    user = setup_test_user()\n           ^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/tests/conftest.py\", line 45, in setup_test_user\n    register_response = SignUp().api_call(user)\n                        ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/api/post_sign_up.py\", line 7, in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/runner/work/python-e2e-localstack-tests/python-e2e-localstack-tests/api/base_api.py\", line 33, in make_request\n    response.raise_for_status()\n  File \"/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py\", line 1021, in raise_for_status\n    raise HTTPError(http_error_msg, response=self)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"testStage":{"status":"broken","statusMessage":"requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup","statusTrace":"chrome_browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"da515ff95c7890d619ff16ffea58a23e\")>\n\n    @pytest.fixture\n    def logged_in_test(chrome_browser: webdriver):\n>       user = setup_test_user()\n\ntests/conftest.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntests/conftest.py:45: in setup_test_user\n    register_response = SignUp().api_call(user)\napi/post_sign_up.py:7: in api_call\n    response = self.make_request(\"POST\", \"users/signup\", json=user_data)\napi/base_api.py:33: in make_request\n    response.raise_for_status()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Response [400]>\n\n    def raise_for_status(self):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(self.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = self.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = self.reason.decode(\"iso-8859-1\")\n        else:\n            reason = self.reason\n    \n        if 400 <= self.status_code < 500:\n            http_error_msg = (\n                f\"{self.status_code} Client Error: {reason} for url: {self.url}\"\n            )\n    \n        elif 500 <= self.status_code < 600:\n            http_error_msg = (\n                f\"{self.status_code} Server Error: {reason} for url: {self.url}\"\n            )\n    \n        if http_error_msg:\n>           raise HTTPError(http_error_msg, response=self)\nE           requests.exceptions.HTTPError: 400 Client Error:  for url: http://localhost:4001/users/signup\n\n/opt/hostedtoolcache/Python/3.12.1/x64/lib/python3.12/site-packages/requests/models.py:1021: HTTPError","steps":[],"attachments":[{"uid":"9345cbb311d776f1","name":"log","source":"9345cbb311d776f1.txt","type":"text/plain","size":1423}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"chrome_browser::0","time":{"start":1718382944264,"stop":1718382944322,"duration":58},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_edit"},{"name":"host","value":"fv-az1788-297"},{"name":"thread","value":"3389-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_edit"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":1,"skipped":0,"passed":8,"unknown":0,"total":9},"items":[{"uid":"6a4aef15bedfe431","reportUrl":"https://michalcecula.github.io/python-e2e-localstack-tests/8//#testresult/6a4aef15bedfe431","status":"passed","time":{"start":1718382446705,"stop":1718382447488,"duration":783}},{"uid":"e6ec52abb3e53f50","reportUrl":"https://michalcecula.github.io/python-e2e-localstack-tests/7//#testresult/e6ec52abb3e53f50","status":"passed","time":{"start":1718382278921,"stop":1718382279661,"duration":740}},{"uid":"ddc09d37f3950359","reportUrl":"https://michalcecula.github.io/python-e2e-localstack-tests/6//#testresult/ddc09d37f3950359","status":"passed","time":{"start":1718197289650,"stop":1718197290535,"duration":885}},{"uid":"26133b54c6d6a6b4","reportUrl":"https://michalcecula.github.io/python-e2e-localstack-tests/5//#testresult/26133b54c6d6a6b4","status":"passed","time":{"start":1718196877694,"stop":1718196878367,"duration":673}},{"uid":"fcee90431d1a3af7","reportUrl":"https://michalcecula.github.io/python-e2e-localstack-tests/4//#testresult/fcee90431d1a3af7","status":"passed","time":{"start":1718195212580,"stop":1718195213383,"duration":803}},{"uid":"f1221428f43def34","reportUrl":"https://michalcecula.github.io/python-e2e-localstack-tests/3//#testresult/f1221428f43def34","status":"passed","time":{"start":1718193729437,"stop":1718193730391,"duration":954}},{"uid":"a23cce10fae40a9b","reportUrl":"https://michalcecula.github.io/python-e2e-localstack-tests/2//#testresult/a23cce10fae40a9b","status":"passed","time":{"start":1718187335776,"stop":1718187336563,"duration":787}},{"uid":"8b471584b425ab60","reportUrl":"https://michalcecula.github.io/python-e2e-localstack-tests/1//#testresult/8b471584b425ab60","status":"passed","time":{"start":1716892707641,"stop":1716892708626,"duration":985}}]},"tags":[]},"source":"1b8f8c915fcb30ba.json","parameterValues":[]}