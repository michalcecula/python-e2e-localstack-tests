{"uid":"2dbf87b339e85d76","name":"test_should_return_500_if_internal_server_error","fullName":"tests.api.test_api_signup#test_should_return_500_if_internal_server_error","historyId":"e9e3f0d02e51de3b8ce503fa9829d34e","time":{"start":1718382276407,"stop":1718382276711,"duration":304},"status":"failed","statusMessage":"Failed: DID NOT RAISE <class 'requests.exceptions.HTTPError'>","statusTrace":"sign_up_api = <api.post_sign_up.SignUp object at 0x7f295f1ce270>\n\n    def test_should_return_500_if_internal_server_error(sign_up_api: SignUp):\n        user = get_random_user()\n        user.username = \"valid_username\"\n        user.email = \"valid_email@example.com\"\n    \n        # Mock the response to simulate a server error\n        with unittest.mock.patch('requests.post', return_value=unittest.mock.Mock(status_code=500, json=lambda: {\"status\": 500, \"error\": \"Internal Server Error\", \"message\": \"Something went wrong\", \"path\": \"/users/signup\"})):\n>           with pytest.raises(requests.exceptions.HTTPError) as exc_info:\nE           Failed: DID NOT RAISE <class 'requests.exceptions.HTTPError'>\n\ntests/api/test_api_signup.py:69: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1718382274267,"stop":1718382274284,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"sign_up_api","time":{"start":1718382276406,"stop":1718382276407,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"Failed: DID NOT RAISE <class 'requests.exceptions.HTTPError'>","statusTrace":"sign_up_api = <api.post_sign_up.SignUp object at 0x7f295f1ce270>\n\n    def test_should_return_500_if_internal_server_error(sign_up_api: SignUp):\n        user = get_random_user()\n        user.username = \"valid_username\"\n        user.email = \"valid_email@example.com\"\n    \n        # Mock the response to simulate a server error\n        with unittest.mock.patch('requests.post', return_value=unittest.mock.Mock(status_code=500, json=lambda: {\"status\": 500, \"error\": \"Internal Server Error\", \"message\": \"Something went wrong\", \"path\": \"/users/signup\"})):\n>           with pytest.raises(requests.exceptions.HTTPError) as exc_info:\nE           Failed: DID NOT RAISE <class 'requests.exceptions.HTTPError'>\n\ntests/api/test_api_signup.py:69: Failed","steps":[],"attachments":[{"uid":"e3afe356ed5c4ceb","name":"log","source":"e3afe356ed5c4ceb.txt","type":"text/plain","size":1247}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests.api"},{"name":"suite","value":"test_api_signup"},{"name":"host","value":"fv-az1016-627"},{"name":"thread","value":"3429-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.test_api_signup"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2dbf87b339e85d76.json","parameterValues":[]}